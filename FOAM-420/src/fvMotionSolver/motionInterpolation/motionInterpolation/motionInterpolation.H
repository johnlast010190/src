/*---------------------------------------------------------------------------*\
|       o        |
|    o     o     |  FOAM (R) : Open-source CFD for Enterprise
|   o   O   o    |  Version : 4.2.0
|    o     o     |  ESI Ltd. <http://esi.com/>
|       o        |
\*---------------------------------------------------------------------------
License
    This file is part of FOAMcore.
    FOAMcore is based on OpenFOAM (R) <http://www.openfoam.org/>.

    FOAMcore is free software: you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    FOAMcore is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    for more details.

    You should have received a copy of the GNU General Public License
    along with FOAMcore.  If not, see <http://www.gnu.org/licenses/>.

Copyright
    (c) 2015 OpenFOAM Foundation

Class
    Foam::motionInterpolation

Description
    Base class for interpolation of cell displacement fields, generated by
    fvMotionSolvers, to the points. This base class implements the default
    method which applies volPointInterpolation only.

SourceFiles
    motionInterpolation.C

\*---------------------------------------------------------------------------*/

#ifndef motionInterpolation_H
#define motionInterpolation_H

#include "fvMesh/fvMesh.H"

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

namespace Foam
{

/*---------------------------------------------------------------------------*\
                         Class motionInterpolation Declaration
\*---------------------------------------------------------------------------*/

class motionInterpolation
{
    // Private data

        //- Reference to the FV mesh
        const fvMesh& mesh_;


    // Private Member Functions

        //- Disallow default bitwise copy construct
        motionInterpolation(const motionInterpolation&);

        //- Disallow default bitwise assignment
        void operator=(const motionInterpolation&);


public:

    //- Runtime type information
    TypeName("motionInterpolation");


    // Declare run-time constructor selection tables

        declareRunTimeSelectionTable
        (
            autoPtr,
            motionInterpolation,
            Istream,
            (
                const fvMesh& mesh,
                Istream& entry
            ),
            (mesh, entry)
        );


    // Selectors

        //- Select default
        static autoPtr<motionInterpolation> New(const fvMesh& mesh);

        //- Select from stream
        static autoPtr<motionInterpolation> New
        (
            const fvMesh& mesh,
            Istream& entry
        );


    // Constructors

        //- Construct from an fvMesh
        motionInterpolation(const fvMesh& mesh);

        //- Construct from an fvMesh and an Istream
        motionInterpolation(const fvMesh& mesh, Istream& entry);


    //- Destructor
    virtual ~motionInterpolation();


    // Member Functions

        //- Return const-refernce to the mesh
        const fvMesh& mesh() const
        {
            return mesh_;
        }

        //- Interpolate the given scalar cell displacement
        virtual void interpolate
        (
            const volScalarField&,
            pointScalarField&
        ) const;

        //- Interpolate the given vector cell displacement
        virtual void interpolate
        (
            const volVectorField&,
            pointVectorField&
        ) const;
};


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

} // End namespace Foam

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#endif

// ************************************************************************* //
