/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  plus                                  |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      foamMapDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
debug           false; //set to true to report memory usage by each key operation

sourceCase      "../";

sourceTime      latestTime;//<scalar>|latestTime //optional, default latestTime
targetTime      0; //optional, default 0

// Optional, by default will read all fields in source mesh
// and map only those present also in the target mesh.
// If source mesh contains way more fields than those in target mesh
// it is recommended to specify which fields to map to avoid
// unnecessary reading of unique source fields  foamMapDict .
//fields          (p k nut U);

// Optional, used to calculate the scaling factor for the source field. 
// By default, fields are not scaled. If source and target have different 
// inlet velocity, or the domain sizes are different, or density is different
// scaling is required.
//fieldTypes
//(
//    p   pressure
//    k   turbEnergy
//    U   velocity
//);

// Optional, calculates wall distance only for specified patches.
// default calculates wall distance for all boundary patches
// Required by foamSample, but can be omitted in foamMap as
// wall distance for all patches is required anyways.
//patches         (body); //accepts regEx and patchGroups

mapBoundary      true; // optional, default true
interpolation    false; // optional, default false
                        // true: use two closest points to interpolate based on coordinate-distance
                        // false: use closest point

// boundBoxType	smBoundBox;  use for HPC run when memory is an issue

// gridCells   400000; default is 1000000, used only when boundBoxType flag set to smBoundBox

